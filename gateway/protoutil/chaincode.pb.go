// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.23.0
// 	protoc        v3.14.0
// source: chaincode.proto

package protoutil

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type ChaincodePackage_ChaincodeMode int32

const (
	// 打好包缓存字节
	ChaincodePackage_FROM_PACKAGE_BYTES ChaincodePackage_ChaincodeMode = 0
	// 打好包文件
	ChaincodePackage_FROM_PACKAGE_FILE ChaincodePackage_ChaincodeMode = 1
	// 源码
	ChaincodePackage_FROM_SOURCE_CODE ChaincodePackage_ChaincodeMode = 2
	// git仓库
	ChaincodePackage_FROM_GIT_REPO ChaincodePackage_ChaincodeMode = 3
)

// Enum value maps for ChaincodePackage_ChaincodeMode.
var (
	ChaincodePackage_ChaincodeMode_name = map[int32]string{
		0: "FROM_PACKAGE_BYTES",
		1: "FROM_PACKAGE_FILE",
		2: "FROM_SOURCE_CODE",
		3: "FROM_GIT_REPO",
	}
	ChaincodePackage_ChaincodeMode_value = map[string]int32{
		"FROM_PACKAGE_BYTES": 0,
		"FROM_PACKAGE_FILE":  1,
		"FROM_SOURCE_CODE":   2,
		"FROM_GIT_REPO":      3,
	}
)

func (x ChaincodePackage_ChaincodeMode) Enum() *ChaincodePackage_ChaincodeMode {
	p := new(ChaincodePackage_ChaincodeMode)
	*p = x
	return p
}

func (x ChaincodePackage_ChaincodeMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ChaincodePackage_ChaincodeMode) Descriptor() protoreflect.EnumDescriptor {
	return file_chaincode_proto_enumTypes[0].Descriptor()
}

func (ChaincodePackage_ChaincodeMode) Type() protoreflect.EnumType {
	return &file_chaincode_proto_enumTypes[0]
}

func (x ChaincodePackage_ChaincodeMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ChaincodePackage_ChaincodeMode.Descriptor instead.
func (ChaincodePackage_ChaincodeMode) EnumDescriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{1, 0}
}

type Chaincode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Lang string `protobuf:"bytes,1,opt,name=lang,proto3" json:"lang,omitempty"`
	// Types that are assignable to Package:
	//	*Chaincode_Source
	//	*Chaincode_File
	//	*Chaincode_GitRepo
	//	*Chaincode_PkgBytes
	Package isChaincode_Package `protobuf_oneof:"Package"`
}

func (x *Chaincode) Reset() {
	*x = Chaincode{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chaincode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chaincode) ProtoMessage() {}

func (x *Chaincode) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chaincode.ProtoReflect.Descriptor instead.
func (*Chaincode) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{0}
}

func (x *Chaincode) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (m *Chaincode) GetPackage() isChaincode_Package {
	if m != nil {
		return m.Package
	}
	return nil
}

func (x *Chaincode) GetSource() []byte {
	if x, ok := x.GetPackage().(*Chaincode_Source); ok {
		return x.Source
	}
	return nil
}

func (x *Chaincode) GetFile() string {
	if x, ok := x.GetPackage().(*Chaincode_File); ok {
		return x.File
	}
	return ""
}

func (x *Chaincode) GetGitRepo() string {
	if x, ok := x.GetPackage().(*Chaincode_GitRepo); ok {
		return x.GitRepo
	}
	return ""
}

func (x *Chaincode) GetPkgBytes() []byte {
	if x, ok := x.GetPackage().(*Chaincode_PkgBytes); ok {
		return x.PkgBytes
	}
	return nil
}

type isChaincode_Package interface {
	isChaincode_Package()
}

type Chaincode_Source struct {
	Source []byte `protobuf:"bytes,2,opt,name=source,proto3,oneof"`
}

type Chaincode_File struct {
	File string `protobuf:"bytes,3,opt,name=file,proto3,oneof"`
}

type Chaincode_GitRepo struct {
	GitRepo string `protobuf:"bytes,4,opt,name=git_repo,json=gitRepo,proto3,oneof"`
}

type Chaincode_PkgBytes struct {
	PkgBytes []byte `protobuf:"bytes,5,opt,name=pkg_bytes,json=pkgBytes,proto3,oneof"`
}

func (*Chaincode_Source) isChaincode_Package() {}

func (*Chaincode_File) isChaincode_Package() {}

func (*Chaincode_GitRepo) isChaincode_Package() {}

func (*Chaincode_PkgBytes) isChaincode_Package() {}

type ChaincodePackage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode      ChaincodePackage_ChaincodeMode `protobuf:"varint,1,opt,name=mode,proto3,enum=chaincode.ChaincodePackage_ChaincodeMode" json:"mode,omitempty"`
	Chaincode *Chaincode                     `protobuf:"bytes,2,opt,name=chaincode,proto3" json:"chaincode,omitempty"`
}

func (x *ChaincodePackage) Reset() {
	*x = ChaincodePackage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaincodePackage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaincodePackage) ProtoMessage() {}

func (x *ChaincodePackage) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaincodePackage.ProtoReflect.Descriptor instead.
func (*ChaincodePackage) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{1}
}

func (x *ChaincodePackage) GetMode() ChaincodePackage_ChaincodeMode {
	if x != nil {
		return x.Mode
	}
	return ChaincodePackage_FROM_PACKAGE_BYTES
}

func (x *ChaincodePackage) GetChaincode() *Chaincode {
	if x != nil {
		return x.Chaincode
	}
	return nil
}

type DefinitionArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name           string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version        string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Sequence       int64  `protobuf:"varint,3,opt,name=sequence,proto3" json:"sequence,omitempty"`
	EndorsePlugin  string `protobuf:"bytes,4,opt,name=endorse_plugin,json=endorsePlugin,proto3" json:"endorse_plugin,omitempty"`
	ValidatePlugin string `protobuf:"bytes,5,opt,name=validate_plugin,json=validatePlugin,proto3" json:"validate_plugin,omitempty"`
	ValidateParams []byte `protobuf:"bytes,6,opt,name=validate_params,json=validateParams,proto3" json:"validate_params,omitempty"`
	InitRequired   bool   `protobuf:"varint,7,opt,name=init_required,json=initRequired,proto3" json:"init_required,omitempty"`
}

func (x *DefinitionArgs) Reset() {
	*x = DefinitionArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DefinitionArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DefinitionArgs) ProtoMessage() {}

func (x *DefinitionArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DefinitionArgs.ProtoReflect.Descriptor instead.
func (*DefinitionArgs) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{2}
}

func (x *DefinitionArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DefinitionArgs) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *DefinitionArgs) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

func (x *DefinitionArgs) GetEndorsePlugin() string {
	if x != nil {
		return x.EndorsePlugin
	}
	return ""
}

func (x *DefinitionArgs) GetValidatePlugin() string {
	if x != nil {
		return x.ValidatePlugin
	}
	return ""
}

func (x *DefinitionArgs) GetValidateParams() []byte {
	if x != nil {
		return x.ValidateParams
	}
	return nil
}

func (x *DefinitionArgs) GetInitRequired() bool {
	if x != nil {
		return x.InitRequired
	}
	return false
}

type ChaincodeInstallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    *Signer           `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Peers     []*Peer           `protobuf:"bytes,2,rep,name=peers,proto3" json:"peers,omitempty"`
	Chaincode *ChaincodePackage `protobuf:"bytes,4,opt,name=chaincode,proto3" json:"chaincode,omitempty"`
}

func (x *ChaincodeInstallRequest) Reset() {
	*x = ChaincodeInstallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaincodeInstallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaincodeInstallRequest) ProtoMessage() {}

func (x *ChaincodeInstallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaincodeInstallRequest.ProtoReflect.Descriptor instead.
func (*ChaincodeInstallRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{3}
}

func (x *ChaincodeInstallRequest) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *ChaincodeInstallRequest) GetPeers() []*Peer {
	if x != nil {
		return x.Peers
	}
	return nil
}

func (x *ChaincodeInstallRequest) GetChaincode() *ChaincodePackage {
	if x != nil {
		return x.Chaincode
	}
	return nil
}

type ChaincodeApproveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer     *Signer         `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Committer  *Peer           `protobuf:"bytes,2,opt,name=committer,proto3" json:"committer,omitempty"`
	Orderer    *Orderer        `protobuf:"bytes,3,opt,name=orderer,proto3" json:"orderer,omitempty"`
	ChannelId  string          `protobuf:"bytes,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Definition *DefinitionArgs `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
	PackageId  string          `protobuf:"bytes,6,opt,name=package_id,json=packageId,proto3" json:"package_id,omitempty"`
}

func (x *ChaincodeApproveRequest) Reset() {
	*x = ChaincodeApproveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaincodeApproveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaincodeApproveRequest) ProtoMessage() {}

func (x *ChaincodeApproveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaincodeApproveRequest.ProtoReflect.Descriptor instead.
func (*ChaincodeApproveRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{4}
}

func (x *ChaincodeApproveRequest) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *ChaincodeApproveRequest) GetCommitter() *Peer {
	if x != nil {
		return x.Committer
	}
	return nil
}

func (x *ChaincodeApproveRequest) GetOrderer() *Orderer {
	if x != nil {
		return x.Orderer
	}
	return nil
}

func (x *ChaincodeApproveRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChaincodeApproveRequest) GetDefinition() *DefinitionArgs {
	if x != nil {
		return x.Definition
	}
	return nil
}

func (x *ChaincodeApproveRequest) GetPackageId() string {
	if x != nil {
		return x.PackageId
	}
	return ""
}

type ChaincodeCommitRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer     *Signer         `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Endorsers  []*Peer         `protobuf:"bytes,2,rep,name=endorsers,proto3" json:"endorsers,omitempty"`
	Orderer    *Orderer        `protobuf:"bytes,3,opt,name=orderer,proto3" json:"orderer,omitempty"`
	ChannelId  string          `protobuf:"bytes,4,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Definition *DefinitionArgs `protobuf:"bytes,5,opt,name=definition,proto3" json:"definition,omitempty"`
}

func (x *ChaincodeCommitRequest) Reset() {
	*x = ChaincodeCommitRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaincodeCommitRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaincodeCommitRequest) ProtoMessage() {}

func (x *ChaincodeCommitRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaincodeCommitRequest.ProtoReflect.Descriptor instead.
func (*ChaincodeCommitRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{5}
}

func (x *ChaincodeCommitRequest) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *ChaincodeCommitRequest) GetEndorsers() []*Peer {
	if x != nil {
		return x.Endorsers
	}
	return nil
}

func (x *ChaincodeCommitRequest) GetOrderer() *Orderer {
	if x != nil {
		return x.Orderer
	}
	return nil
}

func (x *ChaincodeCommitRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

func (x *ChaincodeCommitRequest) GetDefinition() *DefinitionArgs {
	if x != nil {
		return x.Definition
	}
	return nil
}

type ChaincodeArgs struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name    string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Version string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	Args    [][]byte `protobuf:"bytes,3,rep,name=args,proto3" json:"args,omitempty"`
}

func (x *ChaincodeArgs) Reset() {
	*x = ChaincodeArgs{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChaincodeArgs) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChaincodeArgs) ProtoMessage() {}

func (x *ChaincodeArgs) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChaincodeArgs.ProtoReflect.Descriptor instead.
func (*ChaincodeArgs) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{6}
}

func (x *ChaincodeArgs) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChaincodeArgs) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *ChaincodeArgs) GetArgs() [][]byte {
	if x != nil {
		return x.Args
	}
	return nil
}

type ContractInvokeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    *Signer        `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Endorsers []*Peer        `protobuf:"bytes,2,rep,name=endorsers,proto3" json:"endorsers,omitempty"`
	Committer *Peer          `protobuf:"bytes,3,opt,name=committer,proto3" json:"committer,omitempty"`
	Orderer   *Orderer       `protobuf:"bytes,4,opt,name=orderer,proto3" json:"orderer,omitempty"`
	Args      *ChaincodeArgs `protobuf:"bytes,5,opt,name=args,proto3" json:"args,omitempty"`
	ChannelId string         `protobuf:"bytes,6,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ContractInvokeRequest) Reset() {
	*x = ContractInvokeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractInvokeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractInvokeRequest) ProtoMessage() {}

func (x *ContractInvokeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractInvokeRequest.ProtoReflect.Descriptor instead.
func (*ContractInvokeRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{7}
}

func (x *ContractInvokeRequest) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *ContractInvokeRequest) GetEndorsers() []*Peer {
	if x != nil {
		return x.Endorsers
	}
	return nil
}

func (x *ContractInvokeRequest) GetCommitter() *Peer {
	if x != nil {
		return x.Committer
	}
	return nil
}

func (x *ContractInvokeRequest) GetOrderer() *Orderer {
	if x != nil {
		return x.Orderer
	}
	return nil
}

func (x *ContractInvokeRequest) GetArgs() *ChaincodeArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContractInvokeRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

type ContractQueryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Signer    *Signer        `protobuf:"bytes,1,opt,name=signer,proto3" json:"signer,omitempty"`
	Committer *Peer          `protobuf:"bytes,2,opt,name=committer,proto3" json:"committer,omitempty"`
	Orderer   *Orderer       `protobuf:"bytes,3,opt,name=orderer,proto3" json:"orderer,omitempty"`
	Args      *ChaincodeArgs `protobuf:"bytes,4,opt,name=args,proto3" json:"args,omitempty"`
	ChannelId string         `protobuf:"bytes,5,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
}

func (x *ContractQueryRequest) Reset() {
	*x = ContractQueryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_chaincode_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContractQueryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContractQueryRequest) ProtoMessage() {}

func (x *ContractQueryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_chaincode_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContractQueryRequest.ProtoReflect.Descriptor instead.
func (*ContractQueryRequest) Descriptor() ([]byte, []int) {
	return file_chaincode_proto_rawDescGZIP(), []int{8}
}

func (x *ContractQueryRequest) GetSigner() *Signer {
	if x != nil {
		return x.Signer
	}
	return nil
}

func (x *ContractQueryRequest) GetCommitter() *Peer {
	if x != nil {
		return x.Committer
	}
	return nil
}

func (x *ContractQueryRequest) GetOrderer() *Orderer {
	if x != nil {
		return x.Orderer
	}
	return nil
}

func (x *ContractQueryRequest) GetArgs() *ChaincodeArgs {
	if x != nil {
		return x.Args
	}
	return nil
}

func (x *ContractQueryRequest) GetChannelId() string {
	if x != nil {
		return x.ChannelId
	}
	return ""
}

var File_chaincode_proto protoreflect.FileDescriptor

var file_chaincode_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x1a, 0x0c, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x96, 0x01, 0x0a, 0x09, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x18, 0x0a, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x06,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x14, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x1b, 0x0a, 0x08,
	0x67, 0x69, 0x74, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x07, 0x67, 0x69, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x12, 0x1d, 0x0a, 0x09, 0x70, 0x6b, 0x67,
	0x5f, 0x62, 0x79, 0x74, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c, 0x48, 0x00, 0x52, 0x08,
	0x70, 0x6b, 0x67, 0x42, 0x79, 0x74, 0x65, 0x73, 0x42, 0x09, 0x0a, 0x07, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x22, 0xee, 0x01, 0x0a, 0x10, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x50, 0x61, 0x63, 0x6b,
	0x61, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64,
	0x65, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x32, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x67, 0x0a, 0x0d, 0x43,
	0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x12,
	0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x50, 0x41, 0x43, 0x4b, 0x41, 0x47, 0x45, 0x5f, 0x42, 0x59, 0x54,
	0x45, 0x53, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x50, 0x41, 0x43,
	0x4b, 0x41, 0x47, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x46,
	0x52, 0x4f, 0x4d, 0x5f, 0x53, 0x4f, 0x55, 0x52, 0x43, 0x45, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x10,
	0x02, 0x12, 0x11, 0x0a, 0x0d, 0x46, 0x52, 0x4f, 0x4d, 0x5f, 0x47, 0x49, 0x54, 0x5f, 0x52, 0x45,
	0x50, 0x4f, 0x10, 0x03, 0x22, 0xf8, 0x01, 0x0a, 0x0e, 0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x73, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63,
	0x65, 0x12, 0x25, 0x0a, 0x0e, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x5f, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x64, 0x6f, 0x72,
	0x73, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x12, 0x27, 0x0a, 0x0f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x5f, 0x70, 0x61,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x23, 0x0a, 0x0d, 0x69, 0x6e,
	0x69, 0x74, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0c, 0x69, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x22,
	0xa0, 0x01, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x49, 0x6e, 0x73,
	0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x05, 0x70, 0x65, 0x65, 0x72, 0x73, 0x12, 0x39, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x52, 0x09, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x91, 0x02, 0x0a, 0x17, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26,
	0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74,
	0x74, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74,
	0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64,
	0x65, 0x72, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x12, 0x1d, 0x0a,
	0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0a,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x44, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a, 0x64, 0x65, 0x66,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x63,
	0x6b, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0xf1, 0x01, 0x0a, 0x16, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x63, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x09, 0x65, 0x6e, 0x64,
	0x6f, 0x72, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x09, 0x65, 0x6e, 0x64, 0x6f,
	0x72, 0x73, 0x65, 0x72, 0x73, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12,
	0x39, 0x0a, 0x0a, 0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x44, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x41, 0x72, 0x67, 0x73, 0x52, 0x0a,
	0x64, 0x65, 0x66, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x51, 0x0a, 0x0d, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x72, 0x67, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x67,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73, 0x22, 0x8f, 0x02,
	0x0a, 0x15, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x12,
	0x2a, 0x0a, 0x09, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72,
	0x52, 0x09, 0x65, 0x6e, 0x64, 0x6f, 0x72, 0x73, 0x65, 0x72, 0x73, 0x12, 0x2a, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f,
	0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x72, 0x67, 0x73, 0x52, 0x04, 0x61, 0x72, 0x67, 0x73,
	0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x22,
	0xe2, 0x01, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x06, 0x73, 0x69, 0x67, 0x6e,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x52, 0x06, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72,
	0x12, 0x2a, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x65, 0x65,
	0x72, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x74, 0x65, 0x72, 0x12, 0x29, 0x0a, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x52, 0x07,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x04, 0x61, 0x72, 0x67, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x72, 0x67, 0x73, 0x52,
	0x04, 0x61, 0x72, 0x67, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c,
	0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68, 0x61, 0x6e, 0x6e,
	0x65, 0x6c, 0x49, 0x64, 0x32, 0xf1, 0x01, 0x0a, 0x0d, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x53, 0x74, 0x75, 0x62, 0x12, 0x4a, 0x0a, 0x10, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c,
	0x6c, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x00, 0x12, 0x4a, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x72, 0x6f, 0x76, 0x65, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f,
	0x64, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x41, 0x70, 0x70, 0x72,
	0x6f, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x48,
	0x0a, 0x0f, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x69, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x32, 0x8c, 0x01, 0x0a, 0x0c, 0x43, 0x6f, 0x6e,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x53, 0x74, 0x75, 0x62, 0x12, 0x3e, 0x0a, 0x06, 0x49, 0x6e, 0x76,
	0x6f, 0x6b, 0x65, 0x12, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e,
	0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x49, 0x6e, 0x76, 0x6f, 0x6b, 0x65, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3c, 0x0a, 0x05, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x12, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x2e, 0x43,
	0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x42, 0x13, 0x5a, 0x11, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x75, 0x74, 0x69, 0x6c, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_chaincode_proto_rawDescOnce sync.Once
	file_chaincode_proto_rawDescData = file_chaincode_proto_rawDesc
)

func file_chaincode_proto_rawDescGZIP() []byte {
	file_chaincode_proto_rawDescOnce.Do(func() {
		file_chaincode_proto_rawDescData = protoimpl.X.CompressGZIP(file_chaincode_proto_rawDescData)
	})
	return file_chaincode_proto_rawDescData
}

var file_chaincode_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_chaincode_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_chaincode_proto_goTypes = []interface{}{
	(ChaincodePackage_ChaincodeMode)(0), // 0: chaincode.ChaincodePackage.ChaincodeMode
	(*Chaincode)(nil),                   // 1: chaincode.Chaincode
	(*ChaincodePackage)(nil),            // 2: chaincode.ChaincodePackage
	(*DefinitionArgs)(nil),              // 3: chaincode.DefinitionArgs
	(*ChaincodeInstallRequest)(nil),     // 4: chaincode.ChaincodeInstallRequest
	(*ChaincodeApproveRequest)(nil),     // 5: chaincode.ChaincodeApproveRequest
	(*ChaincodeCommitRequest)(nil),      // 6: chaincode.ChaincodeCommitRequest
	(*ChaincodeArgs)(nil),               // 7: chaincode.ChaincodeArgs
	(*ContractInvokeRequest)(nil),       // 8: chaincode.ContractInvokeRequest
	(*ContractQueryRequest)(nil),        // 9: chaincode.ContractQueryRequest
	(*Signer)(nil),                      // 10: common.Signer
	(*Peer)(nil),                        // 11: common.Peer
	(*Orderer)(nil),                     // 12: common.Orderer
	(*Response)(nil),                    // 13: common.Response
}
var file_chaincode_proto_depIdxs = []int32{
	0,  // 0: chaincode.ChaincodePackage.mode:type_name -> chaincode.ChaincodePackage.ChaincodeMode
	1,  // 1: chaincode.ChaincodePackage.chaincode:type_name -> chaincode.Chaincode
	10, // 2: chaincode.ChaincodeInstallRequest.signer:type_name -> common.Signer
	11, // 3: chaincode.ChaincodeInstallRequest.peers:type_name -> common.Peer
	2,  // 4: chaincode.ChaincodeInstallRequest.chaincode:type_name -> chaincode.ChaincodePackage
	10, // 5: chaincode.ChaincodeApproveRequest.signer:type_name -> common.Signer
	11, // 6: chaincode.ChaincodeApproveRequest.committer:type_name -> common.Peer
	12, // 7: chaincode.ChaincodeApproveRequest.orderer:type_name -> common.Orderer
	3,  // 8: chaincode.ChaincodeApproveRequest.definition:type_name -> chaincode.DefinitionArgs
	10, // 9: chaincode.ChaincodeCommitRequest.signer:type_name -> common.Signer
	11, // 10: chaincode.ChaincodeCommitRequest.endorsers:type_name -> common.Peer
	12, // 11: chaincode.ChaincodeCommitRequest.orderer:type_name -> common.Orderer
	3,  // 12: chaincode.ChaincodeCommitRequest.definition:type_name -> chaincode.DefinitionArgs
	10, // 13: chaincode.ContractInvokeRequest.signer:type_name -> common.Signer
	11, // 14: chaincode.ContractInvokeRequest.endorsers:type_name -> common.Peer
	11, // 15: chaincode.ContractInvokeRequest.committer:type_name -> common.Peer
	12, // 16: chaincode.ContractInvokeRequest.orderer:type_name -> common.Orderer
	7,  // 17: chaincode.ContractInvokeRequest.args:type_name -> chaincode.ChaincodeArgs
	10, // 18: chaincode.ContractQueryRequest.signer:type_name -> common.Signer
	11, // 19: chaincode.ContractQueryRequest.committer:type_name -> common.Peer
	12, // 20: chaincode.ContractQueryRequest.orderer:type_name -> common.Orderer
	7,  // 21: chaincode.ContractQueryRequest.args:type_name -> chaincode.ChaincodeArgs
	4,  // 22: chaincode.ChaincodeStub.InstallChaincode:input_type -> chaincode.ChaincodeInstallRequest
	5,  // 23: chaincode.ChaincodeStub.ApproveChaincode:input_type -> chaincode.ChaincodeApproveRequest
	6,  // 24: chaincode.ChaincodeStub.CommitChaincode:input_type -> chaincode.ChaincodeCommitRequest
	8,  // 25: chaincode.ContractStub.Invoke:input_type -> chaincode.ContractInvokeRequest
	9,  // 26: chaincode.ContractStub.Query:input_type -> chaincode.ContractQueryRequest
	13, // 27: chaincode.ChaincodeStub.InstallChaincode:output_type -> common.Response
	13, // 28: chaincode.ChaincodeStub.ApproveChaincode:output_type -> common.Response
	13, // 29: chaincode.ChaincodeStub.CommitChaincode:output_type -> common.Response
	13, // 30: chaincode.ContractStub.Invoke:output_type -> common.Response
	13, // 31: chaincode.ContractStub.Query:output_type -> common.Response
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_chaincode_proto_init() }
func file_chaincode_proto_init() {
	if File_chaincode_proto != nil {
		return
	}
	file_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_chaincode_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chaincode); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaincodePackage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DefinitionArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaincodeInstallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaincodeApproveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaincodeCommitRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChaincodeArgs); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractInvokeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_chaincode_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContractQueryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_chaincode_proto_msgTypes[0].OneofWrappers = []interface{}{
		(*Chaincode_Source)(nil),
		(*Chaincode_File)(nil),
		(*Chaincode_GitRepo)(nil),
		(*Chaincode_PkgBytes)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_chaincode_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_chaincode_proto_goTypes,
		DependencyIndexes: file_chaincode_proto_depIdxs,
		EnumInfos:         file_chaincode_proto_enumTypes,
		MessageInfos:      file_chaincode_proto_msgTypes,
	}.Build()
	File_chaincode_proto = out.File
	file_chaincode_proto_rawDesc = nil
	file_chaincode_proto_goTypes = nil
	file_chaincode_proto_depIdxs = nil
}
